from Btree import Btree
from math import log

tree = Btree(t=2)
tree.insert(5)

tree.insert(1)
print(tree)
tree.insert(10)
print(tree)
#tree.insert(1)
tree.insert(3)
tree.insert(4)
tree.insert(7)
tree.insert(8)
tree.insert(4)
tree.insert(2)
tree.insert(11)
tree.insert(3)
tree.insert(4)
tree.insert(7)
tree.insert(8)
tree.insert(4)
tree.insert(2)
tree.insert(11)
tree.insert(3)
tree.insert(4)
tree.insert(7)
tree.insert(8)
tree.insert(4)
tree.insert(2)
tree.insert(11)
tree.insert(3)
tree.insert(4)
tree.insert(7)
tree.insert(8)
tree.insert(4)
tree.insert(2)
tree.insert(11)
tree.insert(11)
tree.insert(3)
tree.insert(4)
tree.insert(7)
tree.insert(8)
tree.insert(4)
tree.insert(2)
tree.insert(11)
tree.insert(3)
tree.insert(4)
tree.insert(7)
tree.insert(8)
tree.insert(4)
tree.insert(7)
tree.insert(8)
tree.insert(4)
tree.insert(2)
tree.insert(11)
tree.insert(3)
tree.insert(4)
tree.insert(7)
tree.insert(8)
tree.insert(4)
tree.insert(2)
tree.insert(11)
tree.insert(3)
tree.insert(4)
tree.insert(7)
tree.insert(8)
tree.insert(4)
tree.insert(2)
tree.insert(11)
tree.insert(11)
tree.insert(3)
tree.insert(4)
tree.insert(7)
tree.insert(8)
tree.insert(4)
tree.insert(2)
tree.insert(11)
tree.insert(3)
tree.insert(4)
tree.insert(7)
tree.insert(8)
# print(tree._root.keys)
print(tree._root.leaf)
print(tree)
print(f'Len of tree = {len(tree)}')
print(f'Height of tree = {tree._height}')
theorem_result = log((len(tree) + 1)/2, tree._t)
theorem = \
f'''
Len of tree = {len(tree)}
Height of tree = {tree._height}
By the tree height theorem:
	height â‰¤ log_t[(n + 1) / 2]
	log(({len(tree)} + 1)/2, {tree._t}) = {round(theorem_result, 2)}
	{tree._height} â‰¤ {round(theorem_result, 2)}'''

print(theorem)

for i in tree: 
	print(i, end=' ')
print()